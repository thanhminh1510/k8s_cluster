- hosts: all
  become: yes
  tasks:

   - name: update APT packages
     apt:
       update_cache: yes


   - name: disable SWAP (Kubeadm requirement)
     shell: |
        swapoff -a

   - name: disable SWAP in fstab (Kubeadm requirement)
     replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'
   
   
   - name: apply sysctl params without reboot
     command: sysctl --system

   - name: install APT Transport HTTPS
     apt:
        name: apt-transport-https
        state: present

   - name: add Docker apt-key
     apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

   - name: add Docker's APT repository
     apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        filename: "docker-{{ ansible_distribution_release }}"

   - name: add Kubernetes apt-key
     apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

   - name: add Kubernetes' APT repository
     apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: 'kubernetes'

   - name: install Containerd
     apt:
        name: containerd.io
        state: present

   - name: create Containerd directory
     file:
        path: /etc/containerd
        state: directory

   - name: add Containerd configuration
     shell: /usr/bin/containerd config default > /etc/containerd/config.toml

   - name: configuring the systemd cgroup driver
     replace:
        path: /etc/containerd/config.toml
        after: '[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]'
        before: '[plugins."io.containerd.grpc.v1.cri".containerd.untrusted_workload_runtime]'
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

   - name: enable the Containerd service and start it
     systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon-reload: yes

   - name: install Kubelet
     apt:
        name: kubelet
        state: present
        update_cache: true

   - name: install Kubeadm
     apt:
        name: kubeadm
        state: present

   - name: enable the Kubelet service, and enable it persistently
     service:
        name: kubelet
        enabled: yes

   - name: load br_netfilter kernel module
     modprobe:
        name: br_netfilter
        state: present

   - name: set bridge-nf-call-iptables
     sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1

   - name: set ip_forward
     sysctl:
        name: net.ipv4.ip_forward
        value: 1

   - name: check Kubelet args in Kubelet config
     shell: grep "^Environment=\"KUBELET_EXTRA_ARGS=" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf || true
     register: check_args


- hosts: master
  become: yes
  tasks:
   - name: install Kubectl
     apt:
        name: kubectl
        state: present
        force: yes # allow downgrades
